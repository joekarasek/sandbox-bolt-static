(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./node_modules/document-register-element/build/document-register-element.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/document-register-element/build/document-register-element.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*! (C) Andrea Giammarchi - @WebReflection - ISC Style License */\n!function (e, t) {\n  \"use strict\";\n\n  function n() {\n    var e = A.splice(0, A.length);\n\n    for (Ye = 0; e.length;) {\n      e.shift().call(null, e.shift());\n    }\n  }\n\n  function r(e, t) {\n    for (var n = 0, r = e.length; n < r; n++) {\n      T(e[n], t);\n    }\n  }\n\n  function o(e) {\n    for (var t, n = 0, r = e.length; n < r; n++) {\n      t = e[n], V(t, le[a(t)]);\n    }\n  }\n\n  function l(e) {\n    return function (t) {\n      ke(t) && (T(t, e), ae.length && r(t.querySelectorAll(ae), e));\n    };\n  }\n\n  function a(e) {\n    var t = Ze.call(e, \"is\"),\n        n = e.nodeName.toUpperCase(),\n        r = ue.call(oe, t ? te + t.toUpperCase() : ee + n);\n    return t && -1 < r && !i(n, t) ? -1 : r;\n  }\n\n  function i(e, t) {\n    return -1 < ae.indexOf(e + '[is=\"' + t + '\"]');\n  }\n\n  function u(e) {\n    var t = e.currentTarget,\n        n = e.attrChange,\n        r = e.attrName,\n        o = e.target,\n        l = e[$] || 2,\n        a = e[Q] || 3;\n    !ot || o && o !== t || !t[Z] || \"style\" === r || e.prevValue === e.newValue && (\"\" !== e.newValue || n !== l && n !== a) || t[Z](r, n === l ? null : e.prevValue, n === a ? null : e.newValue);\n  }\n\n  function c(e) {\n    var t = l(e);\n    return function (e) {\n      A.push(t, e.target), Ye && clearTimeout(Ye), Ye = setTimeout(n, 1);\n    };\n  }\n\n  function s(e) {\n    rt && (rt = !1, e.currentTarget.removeEventListener(Y, s)), ae.length && r((e.target || y).querySelectorAll(ae), e.detail === q ? q : _), Re && d();\n  }\n\n  function m(e, t) {\n    var n = this;\n    ze.call(n, e, t), O.call(n, {\n      target: n\n    });\n  }\n\n  function f(e, t, n) {\n    var r = t.apply(e, n),\n        l = a(r);\n    return -1 < l && V(r, le[l]), n.pop() && ae.length && o(r.querySelectorAll(ae)), r;\n  }\n\n  function p(e, t) {\n    Fe(e, t), I ? I.observe(e, Qe) : (nt && (e.setAttribute = m, e[U] = D(e), e[k](J, O)), e[k](W, u)), e[K] && ot && (e.created = !0, e[K](), e.created = !1);\n  }\n\n  function d() {\n    for (var e, t = 0, n = _e.length; t < n; t++) {\n      e = _e[t], ie.contains(e) || (n--, _e.splice(t--, 1), T(e, q));\n    }\n  }\n\n  function h(e) {\n    throw new Error(\"A \" + e + \" type is already registered\");\n  }\n\n  function T(e, t) {\n    var n,\n        r,\n        o = a(e);\n    -1 < o && (S(e, le[o]), o = 0, t !== _ || e[_] ? t !== q || e[q] || (e[_] = !1, e[q] = !0, r = \"disconnected\", o = 1) : (e[q] = !1, e[_] = !0, r = \"connected\", o = 1, Re && ue.call(_e, e) < 0 && _e.push(e)), o && (n = e[t + x] || e[r + x]) && n.call(e));\n  }\n\n  function L() {}\n\n  function M(e, t, n) {\n    var r = n && n[B] || \"\",\n        o = t.prototype,\n        l = Ie(o),\n        a = t.observedAttributes || pe,\n        i = {\n      prototype: l\n    };\n    Ue(l, K, {\n      value: function value() {\n        if (we) we = !1;else if (!this[ve]) {\n          this[ve] = !0, new t(this), o[K] && o[K].call(this);\n          var e = Ae[Ne.get(t)];\n          (!ge || e.create.length > 1) && H(this);\n        }\n      }\n    }), Ue(l, Z, {\n      value: function value(e) {\n        -1 < ue.call(a, e) && o[Z] && o[Z].apply(this, arguments);\n      }\n    }), o[G] && Ue(l, j, {\n      value: o[G]\n    }), o[z] && Ue(l, X, {\n      value: o[z]\n    }), r && (i[B] = r), e = e.toUpperCase(), Ae[e] = {\n      constructor: t,\n      create: r ? [r, De(e)] : [e]\n    }, Ne.set(t, e), y[R](e.toLowerCase(), i), g(e), Oe[e].r();\n  }\n\n  function E(e) {\n    var t = Ae[e.toUpperCase()];\n    return t && t.constructor;\n  }\n\n  function v(e) {\n    return \"string\" == typeof e ? e : e && e.is || \"\";\n  }\n\n  function H(e) {\n    for (var t, n = e[Z], r = n ? e.attributes : pe, o = r.length; o--;) {\n      t = r[o], n.call(e, t.name || t.nodeName, null, t.value || t.nodeValue);\n    }\n  }\n\n  function g(e) {\n    return e = e.toUpperCase(), e in Oe || (Oe[e] = {}, Oe[e].p = new Ce(function (t) {\n      Oe[e].r = t;\n    })), Oe[e].p;\n  }\n\n  function b() {\n    He && delete e.customElements, fe(e, \"customElements\", {\n      configurable: !0,\n      value: new L()\n    }), fe(e, \"CustomElementRegistry\", {\n      configurable: !0,\n      value: L\n    });\n\n    for (var t = w.get(/^HTML[A-Z]*[a-z]/), n = t.length; n--; function (t) {\n      var n = e[t];\n\n      if (n) {\n        e[t] = function (e) {\n          var t, r;\n          return e || (e = this), e[ve] || (we = !0, t = Ae[Ne.get(e.constructor)], r = ge && 1 === t.create.length, e = r ? Reflect.construct(n, pe, t.constructor) : y.createElement.apply(y, t.create), e[ve] = !0, we = !1, r || H(e)), e;\n        }, e[t].prototype = n.prototype;\n\n        try {\n          n.prototype.constructor = e[t];\n        } catch (r) {\n          Ee = !0, fe(n, ve, {\n            value: e[t]\n          });\n        }\n      }\n    }(t[n])) {\n      ;\n    }\n\n    y.createElement = function (e, t) {\n      var n = v(t);\n      return n ? $e.call(this, e, De(n)) : $e.call(this, e);\n    }, Je || (tt = !0, y[R](\"\"));\n  }\n\n  var y = e.document,\n      C = e.Object,\n      w = function (e) {\n    var t,\n        n,\n        r,\n        o,\n        l = /^[A-Z]+[a-z]/,\n        a = function a(e) {\n      var t,\n          n = [];\n\n      for (t in u) {\n        e.test(t) && n.push(t);\n      }\n\n      return n;\n    },\n        i = function i(e, t) {\n      (t = t.toLowerCase()) in u || (u[e] = (u[e] || []).concat(t), u[t] = u[t.toUpperCase()] = e);\n    },\n        u = (C.create || C)(null),\n        c = {};\n\n    for (n in e) {\n      for (o in e[n]) {\n        for (r = e[n][o], u[o] = r, t = 0; t < r.length; t++) {\n          u[r[t].toLowerCase()] = u[r[t].toUpperCase()] = o;\n        }\n      }\n    }\n\n    return c.get = function (e) {\n      return \"string\" == typeof e ? u[e] || (l.test(e) ? [] : \"\") : a(e);\n    }, c.set = function (e, t) {\n      return l.test(e) ? i(e, t) : i(t, e), c;\n    }, c;\n  }({\n    collections: {\n      HTMLAllCollection: [\"all\"],\n      HTMLCollection: [\"forms\"],\n      HTMLFormControlsCollection: [\"elements\"],\n      HTMLOptionsCollection: [\"options\"]\n    },\n    elements: {\n      Element: [\"element\"],\n      HTMLAnchorElement: [\"a\"],\n      HTMLAppletElement: [\"applet\"],\n      HTMLAreaElement: [\"area\"],\n      HTMLAttachmentElement: [\"attachment\"],\n      HTMLAudioElement: [\"audio\"],\n      HTMLBRElement: [\"br\"],\n      HTMLBaseElement: [\"base\"],\n      HTMLBodyElement: [\"body\"],\n      HTMLButtonElement: [\"button\"],\n      HTMLCanvasElement: [\"canvas\"],\n      HTMLContentElement: [\"content\"],\n      HTMLDListElement: [\"dl\"],\n      HTMLDataElement: [\"data\"],\n      HTMLDataListElement: [\"datalist\"],\n      HTMLDetailsElement: [\"details\"],\n      HTMLDialogElement: [\"dialog\"],\n      HTMLDirectoryElement: [\"dir\"],\n      HTMLDivElement: [\"div\"],\n      HTMLDocument: [\"document\"],\n      HTMLElement: [\"element\", \"abbr\", \"address\", \"article\", \"aside\", \"b\", \"bdi\", \"bdo\", \"cite\", \"code\", \"command\", \"dd\", \"dfn\", \"dt\", \"em\", \"figcaption\", \"figure\", \"footer\", \"header\", \"i\", \"kbd\", \"mark\", \"nav\", \"noscript\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"section\", \"small\", \"strong\", \"sub\", \"summary\", \"sup\", \"u\", \"var\", \"wbr\"],\n      HTMLEmbedElement: [\"embed\"],\n      HTMLFieldSetElement: [\"fieldset\"],\n      HTMLFontElement: [\"font\"],\n      HTMLFormElement: [\"form\"],\n      HTMLFrameElement: [\"frame\"],\n      HTMLFrameSetElement: [\"frameset\"],\n      HTMLHRElement: [\"hr\"],\n      HTMLHeadElement: [\"head\"],\n      HTMLHeadingElement: [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n      HTMLHtmlElement: [\"html\"],\n      HTMLIFrameElement: [\"iframe\"],\n      HTMLImageElement: [\"img\"],\n      HTMLInputElement: [\"input\"],\n      HTMLKeygenElement: [\"keygen\"],\n      HTMLLIElement: [\"li\"],\n      HTMLLabelElement: [\"label\"],\n      HTMLLegendElement: [\"legend\"],\n      HTMLLinkElement: [\"link\"],\n      HTMLMapElement: [\"map\"],\n      HTMLMarqueeElement: [\"marquee\"],\n      HTMLMediaElement: [\"media\"],\n      HTMLMenuElement: [\"menu\"],\n      HTMLMenuItemElement: [\"menuitem\"],\n      HTMLMetaElement: [\"meta\"],\n      HTMLMeterElement: [\"meter\"],\n      HTMLModElement: [\"del\", \"ins\"],\n      HTMLOListElement: [\"ol\"],\n      HTMLObjectElement: [\"object\"],\n      HTMLOptGroupElement: [\"optgroup\"],\n      HTMLOptionElement: [\"option\"],\n      HTMLOutputElement: [\"output\"],\n      HTMLParagraphElement: [\"p\"],\n      HTMLParamElement: [\"param\"],\n      HTMLPictureElement: [\"picture\"],\n      HTMLPreElement: [\"pre\"],\n      HTMLProgressElement: [\"progress\"],\n      HTMLQuoteElement: [\"blockquote\", \"q\", \"quote\"],\n      HTMLScriptElement: [\"script\"],\n      HTMLSelectElement: [\"select\"],\n      HTMLShadowElement: [\"shadow\"],\n      HTMLSlotElement: [\"slot\"],\n      HTMLSourceElement: [\"source\"],\n      HTMLSpanElement: [\"span\"],\n      HTMLStyleElement: [\"style\"],\n      HTMLTableCaptionElement: [\"caption\"],\n      HTMLTableCellElement: [\"td\", \"th\"],\n      HTMLTableColElement: [\"col\", \"colgroup\"],\n      HTMLTableElement: [\"table\"],\n      HTMLTableRowElement: [\"tr\"],\n      HTMLTableSectionElement: [\"thead\", \"tbody\", \"tfoot\"],\n      HTMLTemplateElement: [\"template\"],\n      HTMLTextAreaElement: [\"textarea\"],\n      HTMLTimeElement: [\"time\"],\n      HTMLTitleElement: [\"title\"],\n      HTMLTrackElement: [\"track\"],\n      HTMLUListElement: [\"ul\"],\n      HTMLUnknownElement: [\"unknown\", \"vhgroupv\", \"vkeygen\"],\n      HTMLVideoElement: [\"video\"]\n    },\n    nodes: {\n      Attr: [\"node\"],\n      Audio: [\"audio\"],\n      CDATASection: [\"node\"],\n      CharacterData: [\"node\"],\n      Comment: [\"#comment\"],\n      Document: [\"#document\"],\n      DocumentFragment: [\"#document-fragment\"],\n      DocumentType: [\"node\"],\n      HTMLDocument: [\"#document\"],\n      Image: [\"img\"],\n      Option: [\"option\"],\n      ProcessingInstruction: [\"node\"],\n      ShadowRoot: [\"#shadow-root\"],\n      Text: [\"#text\"],\n      XMLDocument: [\"xml\"]\n    }\n  });\n\n  \"object\" != _typeof(t) && (t = {\n    type: t || \"auto\"\n  });\n\n  var A,\n      O,\n      N,\n      D,\n      I,\n      F,\n      S,\n      V,\n      P,\n      R = \"registerElement\",\n      U = \"__\" + R + (1e5 * e.Math.random() >> 0),\n      k = \"addEventListener\",\n      _ = \"attached\",\n      x = \"Callback\",\n      q = \"detached\",\n      B = \"extends\",\n      Z = \"attributeChanged\" + x,\n      j = _ + x,\n      G = \"connected\" + x,\n      z = \"disconnected\" + x,\n      K = \"created\" + x,\n      X = q + x,\n      $ = \"ADDITION\",\n      Q = \"REMOVAL\",\n      W = \"DOMAttrModified\",\n      Y = \"DOMContentLoaded\",\n      J = \"DOMSubtreeModified\",\n      ee = \"<\",\n      te = \"=\",\n      ne = /^[A-Z][A-Z0-9]*(?:-[A-Z0-9]+)+$/,\n      re = [\"ANNOTATION-XML\", \"COLOR-PROFILE\", \"FONT-FACE\", \"FONT-FACE-SRC\", \"FONT-FACE-URI\", \"FONT-FACE-FORMAT\", \"FONT-FACE-NAME\", \"MISSING-GLYPH\"],\n      oe = [],\n      le = [],\n      ae = \"\",\n      ie = y.documentElement,\n      ue = oe.indexOf || function (e) {\n    for (var t = this.length; t-- && this[t] !== e;) {\n      ;\n    }\n\n    return t;\n  },\n      ce = C.prototype,\n      se = ce.hasOwnProperty,\n      me = ce.isPrototypeOf,\n      fe = C.defineProperty,\n      pe = [],\n      de = C.getOwnPropertyDescriptor,\n      he = C.getOwnPropertyNames,\n      Te = C.getPrototypeOf,\n      Le = C.setPrototypeOf,\n      Me = !!C.__proto__,\n      Ee = !1,\n      ve = \"__dreCEv1\",\n      He = e.customElements,\n      ge = !/^force/.test(t.type) && !!(He && He.define && He.get && He.whenDefined),\n      be = C.create || C,\n      ye = e.Map || function () {\n    var e,\n        t = [],\n        n = [];\n    return {\n      get: function get(e) {\n        return n[ue.call(t, e)];\n      },\n      set: function set(r, o) {\n        e = ue.call(t, r), e < 0 ? n[t.push(r) - 1] = o : n[e] = o;\n      }\n    };\n  },\n      Ce = e.Promise || function (e) {\n    function t(e) {\n      for (r = !0; n.length;) {\n        n.shift()(e);\n      }\n    }\n\n    var n = [],\n        r = !1,\n        o = {\n      \"catch\": function _catch() {\n        return o;\n      },\n      then: function then(e) {\n        return n.push(e), r && setTimeout(t, 1), o;\n      }\n    };\n    return e(t), o;\n  },\n      we = !1,\n      Ae = be(null),\n      Oe = be(null),\n      Ne = new ye(),\n      De = function De(e) {\n    return e.toLowerCase();\n  },\n      Ie = C.create || function it(e) {\n    return e ? (it.prototype = e, new it()) : this;\n  },\n      Fe = Le || (Me ? function (e, t) {\n    return e.__proto__ = t, e;\n  } : he && de ? function () {\n    function e(e, t) {\n      for (var n, r = he(t), o = 0, l = r.length; o < l; o++) {\n        n = r[o], se.call(e, n) || fe(e, n, de(t, n));\n      }\n    }\n\n    return function (t, n) {\n      do {\n        e(t, n);\n      } while ((n = Te(n)) && !me.call(n, t));\n\n      return t;\n    };\n  }() : function (e, t) {\n    for (var n in t) {\n      e[n] = t[n];\n    }\n\n    return e;\n  }),\n      Se = e.MutationObserver || e.WebKitMutationObserver,\n      Ve = e.HTMLAnchorElement,\n      Pe = (e.HTMLElement || e.Element || e.Node).prototype,\n      Re = !me.call(Pe, ie),\n      Ue = Re ? function (e, t, n) {\n    return e[t] = n.value, e;\n  } : fe,\n      ke = Re ? function (e) {\n    return 1 === e.nodeType;\n  } : function (e) {\n    return me.call(Pe, e);\n  },\n      _e = Re && [],\n      xe = Pe.attachShadow,\n      qe = Pe.cloneNode,\n      Be = Pe.dispatchEvent,\n      Ze = Pe.getAttribute,\n      je = Pe.hasAttribute,\n      Ge = Pe.removeAttribute,\n      ze = Pe.setAttribute,\n      Ke = y.createElement,\n      Xe = y.importNode,\n      $e = Ke,\n      Qe = Se && {\n    attributes: !0,\n    characterData: !0,\n    attributeOldValue: !0\n  },\n      We = Se || function (e) {\n    nt = !1, ie.removeEventListener(W, We);\n  },\n      Ye = 0,\n      Je = R in y && !/^force-all/.test(t.type),\n      et = !0,\n      tt = !1,\n      nt = !0,\n      rt = !0,\n      ot = !0;\n\n  if (Se && (P = y.createElement(\"div\"), P.innerHTML = \"<div><div></div></div>\", new Se(function (e, t) {\n    if (e[0] && \"childList\" == e[0].type && !e[0].removedNodes[0].childNodes.length) {\n      P = de(Pe, \"innerHTML\");\n      var n = P && P.set;\n      n && fe(Pe, \"innerHTML\", {\n        set: function set(e) {\n          for (; this.lastChild;) {\n            this.removeChild(this.lastChild);\n          }\n\n          n.call(this, e);\n        }\n      });\n    }\n\n    t.disconnect(), P = null;\n  }).observe(P, {\n    childList: !0,\n    subtree: !0\n  }), P.innerHTML = \"\"), Je || (Le || Me ? (S = function S(e, t) {\n    me.call(t, e) || p(e, t);\n  }, V = p) : (S = function S(e, t) {\n    e[U] || (e[U] = C(!0), p(e, t));\n  }, V = S), Re ? (nt = !1, function () {\n    var e = de(Pe, k),\n        t = e.value,\n        n = function n(e) {\n      var t = new CustomEvent(W, {\n        bubbles: !0\n      });\n      t.attrName = e, t.prevValue = Ze.call(this, e), t.newValue = null, t[Q] = t.attrChange = 2, Ge.call(this, e), Be.call(this, t);\n    },\n        r = function r(e, t) {\n      var n = je.call(this, e),\n          r = n && Ze.call(this, e),\n          o = new CustomEvent(W, {\n        bubbles: !0\n      });\n      ze.call(this, e, t), o.attrName = e, o.prevValue = n ? r : null, o.newValue = t, n ? o.MODIFICATION = o.attrChange = 1 : o[$] = o.attrChange = 0, Be.call(this, o);\n    },\n        o = function o(e) {\n      var t,\n          n = e.currentTarget,\n          r = n[U],\n          o = e.propertyName;\n      r.hasOwnProperty(o) && (r = r[o], t = new CustomEvent(W, {\n        bubbles: !0\n      }), t.attrName = r.name, t.prevValue = r.value || null, t.newValue = r.value = n[o] || null, null == t.prevValue ? t[$] = t.attrChange = 0 : t.MODIFICATION = t.attrChange = 1, Be.call(n, t));\n    };\n\n    e.value = function (e, l, a) {\n      e === W && this[Z] && this.setAttribute !== r && (this[U] = {\n        className: {\n          name: \"class\",\n          value: this.className\n        }\n      }, this.setAttribute = r, this.removeAttribute = n, t.call(this, \"propertychange\", o)), t.call(this, e, l, a);\n    }, fe(Pe, k, e);\n  }()) : Se || (ie[k](W, We), ie.setAttribute(U, 1), ie.removeAttribute(U), nt && (O = function O(e) {\n    var t,\n        n,\n        r,\n        o = this;\n\n    if (o === e.target) {\n      t = o[U], o[U] = n = D(o);\n\n      for (r in n) {\n        if (!(r in t)) return N(0, o, r, t[r], n[r], $);\n        if (n[r] !== t[r]) return N(1, o, r, t[r], n[r], \"MODIFICATION\");\n      }\n\n      for (r in t) {\n        if (!(r in n)) return N(2, o, r, t[r], n[r], Q);\n      }\n    }\n  }, N = function N(e, t, n, r, o, l) {\n    var a = {\n      attrChange: e,\n      currentTarget: t,\n      attrName: n,\n      prevValue: r,\n      newValue: o\n    };\n    a[l] = e, u(a);\n  }, D = function D(e) {\n    for (var t, n, r = {}, o = e.attributes, l = 0, a = o.length; l < a; l++) {\n      t = o[l], \"setAttribute\" !== (n = t.name) && (r[n] = t.value);\n    }\n\n    return r;\n  })), y[R] = function (e, t) {\n    if (n = e.toUpperCase(), et && (et = !1, Se ? (I = function (e, t) {\n      function n(e, t) {\n        for (var n = 0, r = e.length; n < r; t(e[n++])) {\n          ;\n        }\n      }\n\n      return new Se(function (r) {\n        for (var o, l, a, i = 0, u = r.length; i < u; i++) {\n          o = r[i], \"childList\" === o.type ? (n(o.addedNodes, e), n(o.removedNodes, t)) : (l = o.target, ot && l[Z] && \"style\" !== o.attributeName && (a = Ze.call(l, o.attributeName)) !== o.oldValue && l[Z](o.attributeName, o.oldValue, a));\n        }\n      });\n    }(l(_), l(q)), F = function F(e) {\n      return I.observe(e, {\n        childList: !0,\n        subtree: !0\n      }), e;\n    }, F(y), xe && (Pe.attachShadow = function () {\n      return F(xe.apply(this, arguments));\n    })) : (A = [], y[k](\"DOMNodeInserted\", c(_)), y[k](\"DOMNodeRemoved\", c(q))), y[k](Y, s), y[k](\"readystatechange\", s), y.importNode = function (e, t) {\n      switch (e.nodeType) {\n        case 1:\n          return f(y, Xe, [e, !!t]);\n\n        case 11:\n          for (var n = y.createDocumentFragment(), r = e.childNodes, o = r.length, l = 0; l < o; l++) {\n            n.appendChild(y.importNode(r[l], !!t));\n          }\n\n          return n;\n\n        default:\n          return qe.call(e, !!t);\n      }\n    }, Pe.cloneNode = function (e) {\n      return f(this, qe, [!!e]);\n    }), tt) return tt = !1;\n    if (-2 < ue.call(oe, te + n) + ue.call(oe, ee + n) && h(e), !ne.test(n) || -1 < ue.call(re, n)) throw new Error(\"The type \" + e + \" is invalid\");\n\n    var n,\n        o,\n        a = function a() {\n      return u ? y.createElement(m, n) : y.createElement(m);\n    },\n        i = t || ce,\n        u = se.call(i, B),\n        m = u ? t[B].toUpperCase() : n;\n\n    return u && -1 < ue.call(oe, ee + m) && h(m), o = oe.push((u ? te : ee) + n) - 1, ae = ae.concat(ae.length ? \",\" : \"\", u ? m + '[is=\"' + e.toLowerCase() + '\"]' : m), a.prototype = le[o] = se.call(i, \"prototype\") ? i.prototype : Ie(Pe), ae.length && r(y.querySelectorAll(ae), _), a;\n  }, y.createElement = $e = function $e(e, t) {\n    var n = v(t),\n        r = n ? Ke.call(y, e, De(n)) : Ke.call(y, e),\n        o = \"\" + e,\n        l = ue.call(oe, (n ? te : ee) + (n || o).toUpperCase()),\n        a = -1 < l;\n    return n && (r.setAttribute(\"is\", n = n.toLowerCase()), a && (a = i(o.toUpperCase(), n))), ot = !y.createElement.innerHTMLHelper, a && V(r, le[l]), r;\n  }), L.prototype = {\n    constructor: L,\n    define: ge ? function (e, t, n) {\n      if (n) M(e, t, n);else {\n        var r = e.toUpperCase();\n        Ae[r] = {\n          constructor: t,\n          create: [r]\n        }, Ne.set(t, r), He.define(e, t);\n      }\n    } : M,\n    get: ge ? function (e) {\n      return He.get(e) || E(e);\n    } : E,\n    whenDefined: ge ? function (e) {\n      return Ce.race([He.whenDefined(e), g(e)]);\n    } : g\n  }, !He || /^force/.test(t.type)) b();else if (!t.noBuiltIn) try {\n    !function (t, n, r) {\n      var o = new RegExp(\"^<a\\\\s+is=('|\\\")\" + r + \"\\\\1></a>$\");\n      if (n[B] = \"a\", t.prototype = Ie(Ve.prototype), t.prototype.constructor = t, e.customElements.define(r, t, n), !o.test(y.createElement(\"a\", {\n        is: r\n      }).outerHTML) || !o.test(new t().outerHTML)) throw n;\n    }(function ut() {\n      return Reflect.construct(Ve, [], ut);\n    }, {}, \"document-register-element-a\");\n  } catch (lt) {\n    b();\n  }\n  if (!t.noBuiltIn) try {\n    if (Ke.call(y, \"a\", \"a\").outerHTML.indexOf(\"is\") < 0) throw {};\n  } catch (at) {\n    De = function De(e) {\n      return {\n        is: e.toLowerCase()\n      };\n    };\n  }\n}(window);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/document-register-element/build/document-register-element.js\n");

/***/ })

}]);
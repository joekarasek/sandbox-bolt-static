(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[7],{

/***/ "./node_modules/@bolt/components-nav-priority/nav-priority.js":
/*!********************************************************************!*\
  !*** ./node_modules/@bolt/components-nav-priority/nav-priority.js ***!
  \********************************************************************/
/*! exports provided: BoltNavPriority */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BoltNavPriority\", function() { return BoltNavPriority; });\n/* harmony import */ var _bolt_core_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bolt/core/utils */ \"./node_modules/@bolt/core/utils/index.js\");\n/* harmony import */ var _bolt_core_renderers_renderer_lit_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bolt/core/renderers/renderer-lit-html */ \"./node_modules/@bolt/core/renderers/renderer-lit-html.js\");\nvar _class, _class2, _temp;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      \", \"\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n\n\n/*\n  Consider using these polyfills to broaden browser support:\n    — https://www.npmjs.com/package/classlist-polyfill\n    — https://www.npmjs.com/package/nodelist-foreach-polyfill\n*/\n\nvar BoltNavPriority = Object(_bolt_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"define\"])(_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_withLitHtml) {\n  _inherits(BoltNavPriority, _withLitHtml);\n\n  _createClass(BoltNavPriority, null, [{\n    key: \"observedAttributes\",\n    get: function get() {\n      return ['is-ready'];\n    }\n  }]);\n\n  function BoltNavPriority(self) {\n    var _this;\n\n    _classCallCheck(this, BoltNavPriority);\n\n    self = _this = _possibleConstructorReturn(this, _getPrototypeOf(BoltNavPriority).call(this, self));\n    _this.activeLink = false;\n    _this.useShadow = false;\n    _this.isReady = false;\n    _this.transitionEvent = Object(_bolt_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"whichTransitionEvent\"])();\n    _this._adaptPriorityNav = _this._adaptPriorityNav.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._handleDropdownToggle = _this._handleDropdownToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _possibleConstructorReturn(_this, self);\n  }\n\n  _createClass(BoltNavPriority, [{\n    key: \"connecting\",\n    value: function connecting() {\n      var _this2 = this;\n\n      Promise.all([customElements.whenDefined('bolt-navlink')]).then(function (_) {\n        _this2.isOpen = false;\n        _this2.offsettolerance = 5; // Extra wiggle room when calculating how many items can fit\n\n        _this2.containerTabs = _this2.querySelector('.c-bolt-nav-priority');\n        _this2.primaryNav = _this2.querySelector('.c-bolt-nav-priority__primary');\n        _this2.primaryItems = _this2.querySelectorAll('.c-bolt-nav-priority__primary > .c-bolt-nav-priority__item:not(.c-bolt-nav-priority__item--show-more)');\n\n        _this2.primaryNav.insertAdjacentHTML('beforeend', \"\\n        <li class=\\\"c-bolt-nav-priority__item c-bolt-nav-priority__show-more\\\">\\n          <button type=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" class=\\\"c-bolt-nav-priority__button c-bolt-nav-priority__show-button\\\">\\n            <span class=\\\"c-bolt-nav-priority__show-text\\\">\\n              \".concat(_this2.props.moreText ? _this2.props.moreText : 'More', \"\\n            </span>\\n            <span class=\\\"c-bolt-nav-priority__show-icon\\\">\\n              <bolt-icon name=\\\"chevron-down\\\"></bolt-icon>\\n            </span>\\n          </button>\\n          <div class=\\\"c-bolt-nav-priority__dropdown\\\">\\n            <ul class=\\\"c-bolt-nav-priority__list c-bolt-nav-priority__dropdown-list\\\">\\n              \").concat(_this2.primaryNav.innerHTML, \"\\n            </ul>\\n          </div>\\n        </li>\\n      \")); // trigger `isReady` setup work\n\n\n        _this2.isReady = true;\n        _this2.priorityDropdown = _this2.querySelector('.c-bolt-nav-priority__dropdown');\n        _this2.dropdownItems = _this2.priorityDropdown.querySelectorAll('li');\n        _this2.dropdownLinks = _this2.priorityDropdown.querySelectorAll('bolt-navlink');\n\n        _this2.dropdownLinks.forEach(function (navlink) {\n          navlink.setAttribute('is-dropdown-link', '');\n        });\n\n        _this2.allListItems = _this2.querySelectorAll('li');\n        _this2.moreListItem = _this2.primaryNav.querySelector('.c-bolt-nav-priority__show-more');\n        _this2.dropdownButton = _this2.moreListItem.querySelector('.c-bolt-nav-priority__show-button');\n\n        _this2._adaptPriorityNav();\n\n        _this2._handleExternalClicks();\n\n        _this2._waitForDropdownToFinishAnimating = _this2._waitForDropdownToFinishAnimating.bind(_this2);\n\n        _this2.dropdownButton.addEventListener('click', _this2._handleDropdownToggle);\n\n        _this2.addEventListener('navlink:click', _this2._onActivateLink);\n\n        window.addEventListener('optimizedResize', _this2._adaptPriorityNav);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return Object(_bolt_core_renderers_renderer_lit_html__WEBPACK_IMPORTED_MODULE_1__[\"html\"])(_templateObject(), this.slot('default'));\n    }\n  }, {\n    key: \"_adaptPriorityNav\",\n    value: function _adaptPriorityNav() {\n      var _this3 = this;\n\n      this.classList.add('is-resizing'); // reveal all items for the calculation\n\n      this.allListItems.forEach(function (item) {\n        item.classList.remove('is-hidden');\n      }); // hide items that won't fit in the Primary\n\n      var stopWidth = this.dropdownButton.offsetWidth;\n      var hiddenItems = [];\n      var primaryWidth = this.primaryNav.offsetWidth;\n      var hideTheRest = false; // keep track when the items in the nav stop fitting\n\n      this.primaryItems.forEach(function (item, i) {\n        // make sure the items fit + we haven't already started to encounter items that don't\n        if (primaryWidth + _this3.offsettolerance >= stopWidth + item.offsetWidth && hideTheRest !== true) {\n          stopWidth += item.offsetWidth;\n        } else {\n          hideTheRest = true;\n          item.classList.add('is-hidden');\n          hiddenItems.push(i);\n        }\n      }); // toggle the visibility of More button and items in Secondary\n\n      if (!hiddenItems.length) {\n        this.isOpen = false;\n        this.removeAttribute('open');\n        this.moreListItem.classList.add('is-hidden');\n        this.containerTabs.classList.remove('c-bolt-nav-priority--show-dropdown');\n        this.dropdownButton.classList.remove('is-active');\n        this.dropdownButton.setAttribute('aria-expanded', false);\n      } else {\n        this.dropdownItems.forEach(function (item, i) {\n          if (!hiddenItems.includes(i)) {\n            item.classList.add('is-hidden');\n          }\n        });\n      }\n\n      this.classList.remove('is-resizing');\n    }\n  }, {\n    key: \"_handleExternalClicks\",\n    value: function _handleExternalClicks() {\n      var _this4 = this;\n\n      document.addEventListener('click', function (e) {\n        var el = e.target;\n\n        while (el) {\n          if (el === _this4.priorityDropdown || el === _this4.dropdownButton) {\n            return;\n          }\n\n          el = el.parentNode;\n        }\n\n        _this4.close();\n      });\n    } // `_onActivateLink` handles the `navlink:active` event emitted by the children\n\n  }, {\n    key: \"_onActivateLink\",\n    value: function _onActivateLink(event) {\n      this.close();\n    }\n  }, {\n    key: \"_handleDropdownToggle\",\n    value: function _handleDropdownToggle(e) {\n      e.preventDefault();\n      this.isOpen = !this.isOpen;\n\n      this._toggleDropdown();\n    }\n  }, {\n    key: \"_toggleDropdown\",\n    value: function _toggleDropdown() {\n      if (this.isOpen) {\n        this.open();\n      } else {\n        this.close();\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.isOpen = true;\n      this.setAttribute('open', true);\n      this.containerTabs.classList.add('c-bolt-nav-priority--show-dropdown');\n      this.classList.add('is-opening');\n      this.dropdownButton.classList.add('is-active');\n      this.dropdownButton.setAttribute('aria-expanded', true);\n      this.priorityDropdown.addEventListener(this.transitionEvent, this._waitForDropdownToFinishAnimating, true);\n    } // Wait for the longest transition to finish before cleaning up animation-specific classes\n\n  }, {\n    key: \"_waitForDropdownToFinishAnimating\",\n    value: function _waitForDropdownToFinishAnimating(event) {\n      Object(_bolt_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"waitForTransitionEnd\"])(this, this.priorityDropdown, this._afterDropdownHasFinishedAnimating)(event);\n    } // Post-animation cleanup -- removes event listeners added, once they're no longer needed\n\n  }, {\n    key: \"_afterDropdownHasFinishedAnimating\",\n    value: function _afterDropdownHasFinishedAnimating(self, element, event) {\n      self.classList.remove('is-opening');\n      self.classList.remove('is-closing');\n      self.priorityDropdown.removeEventListener(self.transitionEvent, self._waitForDropdownToFinishAnimating, true);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.isOpen = false;\n      this.removeAttribute('open');\n      this.classList.add('is-closing');\n      this.containerTabs.classList.remove('c-bolt-nav-priority--show-dropdown');\n      this.dropdownButton.classList.remove('is-active');\n      this.dropdownButton.setAttribute('aria-expanded', false);\n      this.priorityDropdown.addEventListener(this.transitionEvent, this._waitForDropdownToFinishAnimating);\n    }\n  }, {\n    key: \"disconnecting\",\n    // Clean up event listeners when being removed from the page\n    value: function disconnecting() {\n      this.removeEventListener('navlink:click', this._onActivateLink);\n      window.removeEventListener('optimizedResize', this._adaptPriorityNav);\n    }\n  }, {\n    key: \"isReady\",\n    get: function get() {\n      return this.hasAttribute('is-ready');\n    },\n    set: function set(value) {\n      value = Boolean(value);\n\n      if (value) {\n        this.setAttribute('is-ready', '');\n        this.classList.add('is-ready');\n        this.dispatchEvent(new CustomEvent('nav-priority:ready', {\n          detail: {\n            isReady: true\n          },\n          bubbles: true\n        })); // make sure containerTabs exists first\n\n        if (this.containerTabs) {\n          this.containerTabs.classList.add('is-ready');\n        }\n      } else {\n        this.removeAttribute('is-ready');\n        this.classList.remove('is-ready'); // make sure containerTabs exists first\n\n        if (this.containerTabs) {\n          this.containerTabs.classList.remove('is-ready');\n        }\n      }\n    }\n  }]);\n\n  return BoltNavPriority;\n}(Object(_bolt_core_renderers_renderer_lit_html__WEBPACK_IMPORTED_MODULE_1__[\"withLitHtml\"])()), _class2.is = 'bolt-nav-priority', _class2.props = {\n  moreText: _bolt_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"props\"].string // Text that displays when navlinks can't all display at once\n\n}, _temp)) || _class;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bolt/components-nav-priority/nav-priority.js\n");

/***/ })

}]);